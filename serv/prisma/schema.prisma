
datasource db {
  provider = "mysql"
  url      = "mysql://root:root@localhost:3306/doctor"

}


generator client {
  provider = "prisma-client-js"
}


model user {
  id              Int        @id @default(autoincrement()) 
  firstName       String
  lastName        String
  username        String     @unique
  email           String     @unique
  password        String
  userType        String
  phoneNumber     String
  imageUrl        String
  doctorId        Int
  doctor          Doctor     @relation(fields: [doctorId], references: [id])
  specialityId    Int   
  speciality      speciality @relation(fields: [specialityId], references: [id])
  patientAppointments Appointment[] @relation("PatientAppointments")
}


model Doctor {
  id           Int        @id @default(autoincrement())
 doctors user[]

  appointments Appointment[]
}


model Appointment {
  id                   Int              @id @default(autoincrement())
  appointmentTime      DateTime
  status               AppointmentStatus @default(Pending)
  appointmentDepartment String?

  // Define relationship with patient
  patient              user             @relation("PatientAppointments", fields: [patientID], references: [id])
  patientID            Int

  // Define relationship with doctor
  doctor               Doctor           @relation(fields: [doctorID], references: [id])
  doctorID             Int
}


enum AppointmentStatus {
  Pending
  Confirmed
  Cancelled
}


model message {
  id      Int     @id @default(autoincrement())
  content String
}


model conversation {
  id    Int     @id @default(autoincrement())
}


model room {
  id    Int     @id @default(autoincrement())
}


model ratingsComments {

  id       Int      @id @default(autoincrement())
  rating   Int
  review   String?
  imageSrc String?
  name     String?
}


model admin {

  id       Int      @id @default(autoincrement())
  Username String   @unique
  Email    String   @unique
  Password String
}



model Blog {
  id       Int      @id @default(autoincrement())
  Title    String
  Text     String
  imageUrl String?
  comments Comment[]
}


model Comment {
  id        Int      @id @default(autoincrement())
  author    String
  comment   String
  timestamp DateTime

  blog      Blog     @relation(fields: [blogId], references: [id], map: "Comment_blogId_fkey")
  blogId    Int
  userId    Int

  @@index([blogId], map: "Comment_blogId_fkey")
}


model payments {
  id          Int      @id @default(autoincrement())
  Amount      Decimal
  paymentDate DateTime
}


model product {
  id       Int     @id @default(autoincrement())

  name     String
  price    Decimal
  imageUrl String?
  Category String

}


model speciality {
  id          Int     @id @default(autoincrement())
  name        String
  doctors user[]
}