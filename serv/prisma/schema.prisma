datasource db {
  provider = "mysql"
  url      = "mysql://root:dhia2002@localhost:3306/doctor"

}

generator client {
  provider = "prisma-client-js"
}




model User {

  id          Int      @id @default(autoincrement()) 
  FirstName   String
  LastName    String
  Username    String
  Email       String   @unique
  Password    String
  UserType    String
  PhoneNumber String
  imageUrl    String
  doctorId   Int
   doctor Doctor @relation(fields: [doctorId], references: [id])
  specialityId   Int

  speciality speciality @relation(fields: [specialityId], references: [id])
}

model speciality {
  id          Int     @id @default(autoincrement())
  name        String
  doctors user[]
}

model Doctor {
  id           Int        @id @default(autoincrement())
 doctors user[]


}
model message {
  id      Int     @id @default(autoincrement())
  content String
}


model Appointment {
  id                   Int              @id @default(autoincrement())
  appointmentTime      DateTime
  status               AppointmentStatus @default(Pending)

  appointmentDepartment String?

  patient              User             @relation("PatientAppointments", fields: [patientID], references: [id])
  patientID            Int

  doctor               Doctor           @relation(fields: [doctorID], references: [id])
  doctorID             Int
}

enum AppointmentStatus {
  Pending
  Confirmed
  Cancelled
}



model conversation {
  id    Int     @id @default(autoincrement())
}

model room {
  id    Int     @id @default(autoincrement())
}

model ratingsComments {

  id       Int      @id @default(autoincrement())
  rating   Int
  review   String?
  imageSrc String?
  name     String?
}


model admin {

  id       Int      @id @default(autoincrement())
  Username String   @unique
  Email    String   @unique
  Password String
}


model Payments {
  id          Int      @id @default(autoincrement())
  Amount      Decimal
  PaymentDate DateTime
}
model Blog {
  id       Int      @id @default(autoincrement())
  Title    String
  Text     String
  imageUrl String?
//   comments Comment[]
}

model Comment {

  id        Int      @id @default(autoincrement())
  author    String
  comment   String
  timestamp DateTime

  blogId    Int
  userId    Int
//   blog      blog     @relation(fields: [blogId], references: [id], map: "Comment_blogId_fkey")

  @@index([blogId], map: "Comment_blogId_fkey")
}



model payments {
  id          Int      @id @default(autoincrement())
  Amount      Decimal
  PaymentDate DateTime
}

model product {
  id       Int     @id @default(autoincrement())

  name     String
  price    Decimal
  imageUrl String?
  Category String

}